syntax = "proto3";

option go_package = "blocker/proto";

service Node {
    rpc Handshake(Version) returns (Version);
    rpc HandleTransaction(Transaction) returns (Ack);
}

message Version {
    string version = 1;
    int32 height = 2;
    string listenAddr = 3;
    repeated string peerList = 4;
}

message Ack{}

message Block {
    Header header = 1;
    repeated Transaction transactions = 2;
    bytes publicKey = 3;
    bytes signature = 4;
}

message Header {
    int32 version = 1;
    int32 height = 2;
    bytes prevHash = 3; // 前一个区块的哈希值
    bytes rootHash = 4; // RootHash 是区块内所有交易的 Merkle 树根哈希
    int64 timestamp = 5;
}

message TxInput {
    // the previous hash of the transaction containing
    // the output we want to spend.
    bytes prevTxHash = 1;
    // the index of the output of the previous transaction we 
    // want to speed.
    uint32 prevOutIndex = 2;
    bytes publicKey = 3;
    // Signature of spender that signed the transaction
    // with its private key.
    bytes signature = 4;
}

message TxOutput {
    int64 amount = 1;
    bytes address = 2;
}

message Transaction {
    int32 version = 1;
    // the inputs to the transaction,including the prevvious tx outputs that are begin spent.
    repeated TxInput inputs = 2;
    repeated TxOutput outputs = 3;
}